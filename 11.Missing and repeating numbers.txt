#include <bits/stdc++.h>
pair<int,int> missingAndRepeating(vector<int> &arr, int n)
{
	// Write your code here 
    int xr = 0  ;
    for(int i = 0 ; i<n ; i++){
        xr = xr^arr[i] ;
        xr = xr^(i+1) ; 
    }
    int bitNo = 0 ;
    while(1){
        if((xr&(1<<bitNo)) != 0){
            break ; 
        }
        bitNo ++ ;
    }
    int zeros = 0 ;
    int ones = 0 ;
    for(int i = 0 ; i<n ; i++){
        if((arr[i]&(1<<bitNo))!=0){
            ones = ones^arr[i] ;
        }
        else{
            zeros = zeros^arr[i] ;
        }
    }
    for(int i = 0 ; i<=n ; i++){
        if((i&(1<<bitNo))!=0){
            ones = ones^i ;
        }
        else{
            zeros = zeros^i ;
        }
    }
    int count = 0 ;
    for(int i =0 ; i<n ; i++){
        if(arr[i]== zeros)count++ ;
    }
    if(count==2)return {ones, zeros} ;
    return {zeros,ones} ;
}
