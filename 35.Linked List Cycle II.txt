Node* floydDetectCycle(Node* head){
    if(head==NULL){

        return NULL;

    }
    Node* slow=head;

    Node* fast=head;
    while(slow!=NULL && fast!=NULL){

        fast=fast->next;

        if(fast!=NULL){

            fast=fast->next;

        }

        slow=slow->next;

        if(slow==fast){

            return slow;

        }

    }

    return NULL;

}
Node* getStartinNode(Node* head){

    Node* intersection=floydDetectCycle(head);

    if(intersection == NULL){
     return NULL;

    }
    Node* slow=head;
    while(slow!=intersection){
        slow=slow->next;
        intersection=intersection->next;

    }
    return slow;

}
Node *firstNode(Node *head)

{

    return getStartinNode(head);

}